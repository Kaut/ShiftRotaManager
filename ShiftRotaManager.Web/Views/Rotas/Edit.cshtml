@model ShiftRotaManager.Data.Models.Rota

@{
    ViewData["Title"] = "Edit Rota Assignment";
}

<h1 class="text-center mb-4">Edit Rota Assignment</h1>

<div class="row justify-content-center">
    <div class="col-md-6">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
            <input type="hidden" asp-for="Id" />
            <div class="mb-3">
                <label asp-for="Date" class="form-label"></label>
                <input asp-for="Date" type="date" class="form-control rounded" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="ShiftId" class="form-label">Shift</label>
                <select asp-for="ShiftId" class="form-control rounded" asp-items="ViewBag.Shifts"></select>
                <span asp-validation-for="ShiftId" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="TeamMemberId" class="form-label">Assigned Team Member (Optional, leave blank for Open Shift)</label>
                <select asp-for="TeamMemberId" class="form-control rounded" asp-items="ViewBag.TeamMembers">
                    <option value="">-- Select Team Member --</option>
                </select>
                <span asp-validation-for="TeamMemberId" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="SelectedPairedTeamMemberIds" class="form-label">Paired Team Members (Optional)</label>
                <div class="border rounded p-2" style="max-height: 200px; overflow-y: auto;">
                    @{
                        // Cast the ViewBag data to the expected type.
                        var teamMembersList = ViewBag.TeamMembers as IEnumerable<SelectListItem>;
                        if (teamMembersList != null)
                        {
                            // Loop through each team member to create a checkbox.
                            foreach (var member in teamMembersList)
                            {
                                <div class="form-check">
                                    <input class="form-check-input"
                                           type="checkbox"
                                           name="SelectedPairedTeamMemberIds"
                                           value="@member.Value"
                                           id="paired_@member.Value"
                                           checked="@(Model.SelectedPairedTeamMemberIds?.Contains(Guid.Parse(member.Value)) ?? false)" />
                                    <label class="form-check-label" for="paired_@member.Value">
                                        @member.Text
                                    </label>
                                </div>
                            }
                        }
                    }
                </div>
                <span asp-validation-for="SelectedPairedTeamMemberIds" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Status" class="form-label"></label>
                <select asp-for="Status" class="form-control rounded" asp-items="Html.GetEnumSelectList<ShiftRotaManager.Data.Models.RotaStatus>()"></select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="d-grid gap-2">
                <button type="submit" class="btn btn-primary rounded-pill">Save Changes</button>
                <a asp-action="Index" class="btn btn-outline-secondary rounded-pill">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}